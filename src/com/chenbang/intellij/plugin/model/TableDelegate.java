package com.chenbang.intellij.plugin.model;

import com.chenbang.intellij.plugin.api.jdbc.meta.table.ColumnInfo;
import com.chenbang.intellij.plugin.api.jdbc.meta.table.TableInfo;
import com.intellij.database.model.DasColumn;
import com.intellij.database.psi.DbTable;
import com.intellij.database.util.DasUtil;
import com.intellij.util.containers.JBIterable;

import java.util.ArrayList;
import java.util.List;

public class TableDelegate {

    public final DbTable tableElement;
    final private TableInfo tableInfo = new TableInfo();
    final private List<ColumnInfo> columns = new ArrayList<>();
    final private List<String> primaryKeys = new ArrayList<>();


    public TableDelegate(DbTable tableElement) {
        this.tableElement = tableElement;

        JBIterable<? extends DasColumn> columnsIter = DasUtil.getColumns(tableElement);
        List<? extends DasColumn> dasColumns = columnsIter.toList();
        for (DasColumn dasColumn : dasColumns) {

            ColumnInfo column = new ColumnInfo();
            column.setColumnName(dasColumn.getName());
            column.setComment(dasColumn.getComment());
            column.setColumnTypeName(dasColumn.getDataType().typeName);
            column.setAutoIncrement(DasUtil.isAutoGenerated(dasColumn));
            columns.add(column);

            if (DasUtil.isPrimary(dasColumn)) {
                primaryKeys.add(dasColumn.getName());
            }

        }

        tableInfo.setTableName(tableElement.getName());
        tableInfo.setTableType(tableElement.getTypeName());
        tableInfo.setComment(tableElement.getComment());
        tableInfo.setColumnInfoList(columns);
    }

    public String getTableName() {
        return tableElement.getName();
    }

    public List<ColumnInfo> getColumns() {
        return columns;
    }

    public List<String> getColumnsName() {
        List<String> columnsName = new ArrayList<>();
        for (ColumnInfo column : columns) {
            columnsName.add(column.getColumnName());
        }
        return columnsName;
    }

    public List<String> getPrimaryKeys() {
        return this.primaryKeys;
    }

}
